version: 2.1

commands:
  yarn-install-with-cache:
    steps:
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install YARN dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  yarn-build-then-test:
    parameters:
      package_name:
        type: string
    steps:
      - run:
          name: Build
          command: yarn build --scope << parameters.package_name >> --include-filtered-dependencies
      - run:
          name: Test
          command: yarn test --scope << parameters.package_name >>

executors:
  node-build-environment:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/repo
  terragrunt-deploy-environment:
    docker:
      - image: sketchingdev/terraform-terragrunt:0.11.11-0.17.3-3
    working_directory: ~/repo

jobs:
  ## Website

  test_website:
    executor: node-build-environment
    steps:
      - checkout
      - yarn-install-with-cache
      - yarn-build-then-test:
          package_name: website

  build_website:
    executor: node-build-environment
    steps:
      - checkout
      - yarn-install-with-cache
      - run:
          name: Build
          command: |
            if [[ $CIRCLE_BRANCH = "master" ]]; then
              export REACT_APP_IMAGE_API_URL=https://images.drawbydays.com/
            else
              export REACT_APP_IMAGE_API_URL=https://images-ci.drawbydays.com/
            fi

            yarn build --scope website --include-filtered-dependencies
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/website/build

  deploy_website:
    executor: terragrunt-deploy-environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy website
          command: |
            [[ $CIRCLE_BRANCH = "master" ]] && export ENV="prod" || export ENV="ci"
            cd $ENV/website

            terragrunt apply-all --terragrunt-non-interactive -auto-approve
            aws s3 sync /tmp/workspace/packages/website/build s3://$(terragrunt output bucket_name)/ --delete
          working_directory: terraform/environments/

  ## Public Image Details

  test_public_image_details:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers
      - image: localstack/localstack
        environment:
          SERVICES: dynamodb
    steps:
      - setup_remote_docker
      - checkout
      - yarn-install-with-cache
      - yarn-build-then-test:
          package_name: public-image-details

  build_public_image_details:
    executor: node-build-environment
    steps:
      - checkout
      - yarn-install-with-cache
      - run:
          name: Build
          command: yarn build --scope public-image-details --include-filtered-dependencies
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/public-image-details/dist/save-image-metadata.zip

  deploy_public_image_details:
    executor: terragrunt-deploy-environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy public image details
          command: |
            [[ $CIRCLE_BRANCH = "master" ]] && export ENV="prod" || export ENV="ci"
            cd $ENV/public-image-details

            export TF_VAR_save_image_metadata_lambda_filename=/tmp/workspace/packages/public-image-details/dist/save-image-metadata.zip
            terragrunt apply-all --terragrunt-non-interactive -auto-approve

            echo "export AWS_REGION=us-east-1" > ../../env.outputs
            terragrunt-output-to-env.sh private_url subscribed_topic_arn >> ../../env.outputs
          working_directory: terraform/environments/
      - persist_to_workspace:
          root: ~/repo
          paths:
            - terraform/environments/env.outputs

  test_integration_public_image_details:
    executor: node-build-environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - yarn-install-with-cache
      - run:
          name: Integration tests
          command: |
            source /tmp/workspace/terraform/environments/env.outputs
            echo "Loaded env file"
            cat /tmp/workspace/terraform/environments/env.outputs
            yarn test:integration --scope public-image-details

  ## Public Image Store

  test_public_image_store:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers
      - image: localstack/localstack
        environment:
          SERVICES: sns,sqs
    steps:
      - setup_remote_docker
      - checkout
      - yarn-install-with-cache
      - yarn-build-then-test:
          package_name: public-image-store

  build_public_image_store:
    executor: node-build-environment
    steps:
      - checkout
      - yarn-install-with-cache
      - run:
          name: Build
          command: yarn build --scope public-image-store --include-filtered-dependencies
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/public-image-store/dist/public-image-store.zip

  deploy_public_image_store:
    executor: terragrunt-deploy-environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy public image store
          command: |
            [[ $CIRCLE_BRANCH = "master" ]] && export ENV="prod" || export ENV="ci"
            cd $ENV/public-image-store

            export TF_VAR_new_image_event_producer_lambda_filename=/tmp/workspace/packages/public-image-store/dist/public-image-store.zip
            terragrunt apply-all --terragrunt-non-interactive -auto-approve

            echo "export AWS_REGION=us-east-1" > ../../env.outputs
            terragrunt-output-to-env.sh subscribed_topic_arn bucket_name >> ../../env.outputs
          working_directory: terraform/environments/
      - persist_to_workspace:
          root: ~/repo
          paths:
            - terraform/environments/env.outputs

  test_integration_public_image_store:
    executor: node-build-environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - yarn-install-with-cache
      - run:
          name: Integration tests
          command: |
            source /tmp/workspace/terraform/environments/env.outputs
            echo "Loaded env file"
            cat /tmp/workspace/terraform/environments/env.outputs
            yarn test:integration --scope public-image-store

workflows:
  version: 2

  website:
    jobs:
      - test_website
      - build_website:
          requires:
            - test_website
      - deploy_website:
          requires:
            - build_website

  public_image_details:
    jobs:
      - test_public_image_details
      - build_public_image_details:
          requires:
            - test_public_image_details
      - deploy_public_image_details:
          requires:
            - build_public_image_details
      - test_integration_public_image_details:
          requires:
            - deploy_public_image_details
          filters:
            branches:
              ignore:
                - master

  public_image_store:
    jobs:
      - test_public_image_store
      - build_public_image_store:
          requires:
            - test_public_image_store
      - deploy_public_image_store:
          requires:
            - build_public_image_store
      - test_integration_public_image_store:
          requires:
            - deploy_public_image_store
          filters:
            branches:
              ignore:
                - master
