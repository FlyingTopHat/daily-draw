version: 2.1

# commands: # a reusable command with parameters
#   s3sync:
#     parameters:
#       from:
#         type: string
#       to:
#         type: string
#       overwrite:
#         default: false
#         type: boolean
#     steps:
#       - run: # a parameterized run step
#           name: Deploy to S3
#           command: "aws s3 sync << parameters.from >> << parameters.to >><<# parameters.overwrite >> --delete<</ parameters.overwrite >>"

executors:
  build-environment-executor:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/repo
  deploy-environment-executor:
    docker:
      - image: sketchingdev/terraform-terragrunt:latest
    working_directory: ~/repo

jobs:
  build:
    executor: build-environment-executor
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install YARN dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Test packages
          command: yarn test
      - run:
          name: Build packages
          command: |
            export REACT_APP_IMAGE_API_URL=https://7kh2kmkw87.execute-api.us-east-1.amazonaws.com/images
            yarn build --stream
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/image-api/dist/retrieve-image-lambda.zip
            - packages/website/build

  deploy_image_api:
    executor: deploy-environment-executor
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy Image API
          command: |
            [[ $CIRCLE_BRANCH = "master" ]] && export TF_VAR_env="prod"

            export TF_VAR_lambda_filename=/tmp/workspace/packages/image-api/dist/retrieve-image-lambda.zip
            terragrunt apply --terragrunt-non-interactive -auto-approve
          working_directory: deployment/environment/image-api

  deploy_website:
    executor: deploy-environment-executor
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy website
          command: |
            [[ $CIRCLE_BRANCH = "master" ]] && export TF_VAR_env="prod"

            terragrunt apply --terragrunt-non-interactive -auto-approve

            aws s3 sync /tmp/workspace/packages/website/build s3://$(terragrunt output bucket_name)/ --delete
          working_directory: deployment/environment/website

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy_image_api:
          requires:
            - build
      - deploy_website:
          requires:
            - build
