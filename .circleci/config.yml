version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install YARN dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Test packages
          command: yarn test
      - run:
          name: Build packages
          command: yarn build --stream
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/image-api/dist/retrieve-image-lambda.zip
            - packages/website/build

  deploy:
    docker:
      - image: sketchingdev/terraform-terragrunt:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - deploy:
          name: Deploy Image API
          command: |
            export TF_VAR_lambda_filename=/tmp/workspace/packages/image-api/dist/retrieve-image-lambda.zip

            # [[ $CIRCLE_BRANCH = "master" ]] && TF_VAR_env="dev" || TF_VAR_env="prod"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export TF_VAR_env=prod
            fi
            terragrunt apply --terragrunt-non-interactive -auto-approve
          working_directory: deployment/environment/image-api
      - run: apk add --update python python-dev py-pip build-base
      - run: pip install awscli
      - deploy:
          name: Deploy website
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export TF_VAR_env=prod
            fi
            terragrunt apply --terragrunt-non-interactive -auto-approve

            aws s3 sync /tmp/workspace/packages/website/build s3://$(terragrunt output bucket_name)/ --delete
          working_directory: deployment/environment/website

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
